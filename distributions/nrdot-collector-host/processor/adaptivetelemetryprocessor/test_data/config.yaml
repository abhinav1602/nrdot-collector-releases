extensions:
  health_check:

receivers:
  otlp:
    protocols:
      grpc:
      http:

  hostmetrics:
    # Default collection interval is 60s. Lower if you need finer granularity.
    collection_interval: 1s
    scrapers:
      cpu:
        metrics:
          system.cpu.time:
            enabled: true
          system.cpu.utilization:
            enabled: true
      load:
        metrics:
          system.cpu.load_average.1m:
            enabled: true
          system.cpu.load_average.5m:
            enabled: true
          system.cpu.load_average.15m:
            enabled: true
      memory:
        metrics:
          system.memory.usage:
            enabled: true
          system.memory.utilization:
            enabled: true
      paging:
        metrics:
          system.paging.faults:
            enabled: true
          system.paging.operations:
            enabled: true
          system.paging.usage:
            enabled: true
          system.paging.utilization:
            enabled: true
      filesystem:
        metrics:
          system.filesystem.usage:
            enabled: true
          system.filesystem.utilization:
            enabled: true
          system.filesystem.inodes.usage:
            enabled: true
        # Exclude standard virtual filesystems
        exclude_mount_points:
          match_type: regexp
          mount_points:
            - '^/(sys|proc|dev)($|/)'
        # Include all filesystem types
        exclude_fs_types:
          match_type: strict
          fs_types: []  # Empty list means include all
      disk:
        metrics:
          system.disk.io:
            enabled: true
          system.disk.io_time:
            enabled: true
          system.disk.merged:
            enabled: true
          system.disk.operations:
            enabled: true
          system.disk.operation_time:
            enabled: true
          system.disk.pending_operations:
            enabled: true
          system.disk.weighted_io_time:
            enabled: true
      network:
        metrics:
          system.network.connections:
            enabled: true
          system.network.dropped:
            enabled: true
          system.network.errors:
            enabled: true
          system.network.io:
            enabled: true
          system.network.packets:
            enabled: true
      processes:
        metrics:
          system.processes.count:
            enabled: true
          system.processes.created:
            enabled: true
      process:
        metrics:
          process.cpu.time:
            enabled: true
          process.cpu.utilization:
            enabled: true
          process.memory.usage:
            enabled: true
          process.memory.virtual:
            enabled: true
          process.memory.utilization:
            enabled: true
          process.disk.io:
            enabled: true
          process.disk.operations:
            enabled: true
          process.threads:
            enabled: true
          process.open_file_descriptors:
            enabled: true
          process.paging.faults:
            enabled: true
          process.context_switches:
            enabled: true
          process.uptime:
            enabled: true
          process.handles:
            enabled: true
          process.signals_pending:
            enabled: true
        # Capture all the process resource attributes mentioned in the schema
        resource_attributes:
          process.pid:
            enabled: true
          process.parent_pid:
            enabled: true
          process.executable.name:
            enabled: true
          process.executable.path:
            enabled: true
          process.command:
            enabled: true
          process.command_line:
            enabled: true
          process.owner:
            enabled: true
          process.cgroup:
            enabled: false  # Set to false as per schema

  filelog:
    include:
      - /var/log/alternatives.log
      - /var/log/cloud-init.log
      - /var/log/auth.log
      - /var/log/dpkg.log
      - /var/log/syslog
      - /var/log/messages
      - /var/log/secure
      - /var/log/yum.log

processors:
  # group system.cpu metrics by cpu
  metricstransform:
    transforms:
      - include: system.cpu.utilization
        action: update
        operations:
          - action: aggregate_labels
            label_set: [ state ]
            aggregation_type: mean
      - include: system.paging.operations
        action: update
        operations:
          - action: aggregate_labels
            label_set: [ direction ]
            aggregation_type: sum
            
  # Removed backup static processor - using only the main processor with dynamic thresholds

  # Adaptive process filter processor configuration
  adaptivetelemetryprocessor:
    # Enable all filter stage features
    enable_dynamic_thresholds: true
    enable_multi_metric: true
    enable_anomaly_detection: true
    
    # Thresholds configured to catch the conditions generated by the Python script
    metric_thresholds:
      process.cpu.utilization: 15.0
      system.cpu.utilization: 8.0
      process.memory.utilization: 30.0
      system.memory.utilization: 30.0
      system.filesystem.utilization: 30.0
      system.disk.io: 30.0
      system.network.io: 30.0
      system.paging.operations: 80.0
      system.uptime: 0.0
      process.uptime: 0.0

    enable_storage: true
    storage_path: "/tmp/adaptivetelemetry-test.db"
    retention_minutes: 1  # 60 seconds for quick retention testing
    
    dynamic_smoothing_factor: 0.3
    min_thresholds:
      process.memory.utilization: 5.0
      system.memory.utilization: 5.0
    max_thresholds:
      process.memory.utilization: 60.0
      system.memory.utilization: 60.0

    # Composite score settings for Multi-Metric stage
    composite_threshold: 0.2  
    weights:
      system.filesystem.utilization: 0.4
      system.disk.io: 0.4
      system.network.io: 0.4
      system.cpu.utilization: 0.6
      system.memory.utilization: 0.6
      process.cpu.utilization: 0.7
      process.memory.utilization: 0.6

    # Anomaly settings to catch the 1100% change in the test script
    anomaly_history_size: 3             
    anomaly_change_threshold: 20.0
    
    # Debug settings - critical for visibility in logs
    debug_show_all_filter_stages: true
  
  # We're keeping all metrics, but still excluding some specific combinations 
  # to avoid noisy or less useful data points
  filter/exclude_cpu_utilization:
    metrics:
      datapoint:
        - 'metric.name == "system.cpu.utilization" and attributes["state"] == "interrupt"'
        - 'metric.name == "system.cpu.utilization" and attributes["state"] == "softirq"'
  filter/exclude_memory_utilization:
    metrics:
      datapoint:
        - 'metric.name == "system.memory.utilization" and attributes["state"] == "slab_unreclaimable"'
  filter/exclude_memory_usage:
    metrics:
      datapoint:
        - 'metric.name == "system.memory.usage" and attributes["state"] == "slab_unreclaimable"'
  filter/exclude_filesystem_utilization:
    metrics:
      datapoint:
        - 'metric.name == "system.filesystem.utilization" and attributes["type"] == "squashfs"'
  filter/exclude_filesystem_usage:
    metrics:
      datapoint:
        - 'metric.name == "system.filesystem.usage" and attributes["type"] == "squashfs"'
  filter/exclude_filesystem_inodes_usage:
    metrics:
      datapoint:
        - 'metric.name == "system.filesystem.inodes.usage" and attributes["type"] == "squashfs"'
  filter/exclude_system_disk:
    metrics:
      datapoint:
        - 'metric.name == "system.disk.operations" and IsMatch(attributes["device"], "^loop.*") == true'
        - 'metric.name == "system.disk.merged" and IsMatch(attributes["device"], "^loop.*") == true'
        - 'metric.name == "system.disk.io" and IsMatch(attributes["device"], "^loop.*") == true'
        - 'metric.name == "system.disk.io_time" and IsMatch(attributes["device"], "^loop.*") == true'
        - 'metric.name == "system.disk.operation_time" and IsMatch(attributes["device"], "^loop.*") == true'
  filter/exclude_system_paging:
    metrics:
      datapoint:
        - 'metric.name == "system.paging.usage" and attributes["state"] == "cached"'
        - 'metric.name == "system.paging.operations" and attributes["type"] == "cached"'
  filter/exclude_network:
    metrics:
      datapoint:
        - 'IsMatch(metric.name, "^system.network.*") == true and attributes["device"] == "lo"'

  attributes/exclude_system_paging:
    include:
      match_type: strict
      metric_names:
        - system.paging.operations
    actions:
      - key: type
        action: delete

  cumulativetodelta:

  transform/host:
    metric_statements:
      - context: metric
        statements:
          - set(description, "")
          - set(unit, "")

  transform:
    trace_statements:
      - context: span
        statements:
          - truncate_all(attributes, 4095)
          - truncate_all(resource.attributes, 4095)
    log_statements:
      - context: log
        statements:
          - truncate_all(attributes, 4095)
          - truncate_all(resource.attributes, 4095)

  # used to prevent out of memory situations on the collector
  memory_limiter:
    check_interval: 1s
    limit_mib: ${env:NEW_RELIC_MEMORY_LIMIT_MIB:-100}

  batch:

  resourcedetection:
    detectors: ["system"]
    system:
      hostname_sources: ["os"]
      resource_attributes:
        host.id:
          enabled: true

  resourcedetection/cloud:
    detectors: ["gcp", "ec2", "azure"]
    timeout: 2s
    ec2:
      resource_attributes:
        host.name:
          enabled: false

  # Gives OTEL_RESOURCE_ATTRIBUTES precedence over other sources.
  # host.id is set from env whenever the collector is orchestrated by NR Agents.
  resourcedetection/env:
    detectors: ["env"]
    timeout: 2s
    override: true

exporters:
  otlphttp:
    endpoint: ${env:OTEL_EXPORTER_OTLP_ENDPOINT:-https://otlp.nr-data.net}
    headers:
      api-key: ${env:NEW_RELIC_LICENSE_KEY}

service:
  pipelines:
    metrics/host:
      receivers: [hostmetrics]
      processors:
        - memory_limiter
        - adaptivetelemetryprocessor        # Main processor with dynamic thresholds
        - metricstransform
        - filter/exclude_cpu_utilization
        - filter/exclude_memory_utilization
        - filter/exclude_memory_usage
        - filter/exclude_filesystem_utilization
        - filter/exclude_filesystem_usage
        - filter/exclude_filesystem_inodes_usage
        - filter/exclude_system_disk
        - filter/exclude_network
        - attributes/exclude_system_paging
        - transform/host
        - resourcedetection
        - resourcedetection/cloud
        - resourcedetection/env
        - cumulativetodelta
        - batch
      exporters: [otlphttp]
    logs/host:
      receivers: [filelog]
      processors: [memory_limiter, transform, resourcedetection, resourcedetection/cloud, resourcedetection/env, batch]
      exporters: [otlphttp]
    traces:
      receivers: [otlp]
      processors: [memory_limiter, transform, resourcedetection, resourcedetection/cloud, resourcedetection/env, batch]
      exporters: [otlphttp]
    metrics:
      receivers: [otlp]
      processors: [memory_limiter, transform, resourcedetection, resourcedetection/cloud, resourcedetection/env, batch]
      exporters: [otlphttp]
    logs:
      receivers: [otlp]
      processors: [memory_limiter, transform, resourcedetection, resourcedetection/cloud, resourcedetection/env, batch]
      exporters: [otlphttp]